---
import BaseLayout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import { Combobox } from "@/components/ui/combobox";
import type { Post, PostsGlob } from "@/types/posts";
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from "astro";

export const prerender = true;

export const getStaticPaths = (async () => {
  const allPosts: PostsGlob = await Astro.glob("../posts/*.mdx");

  const tags: string[] = [
    ...new Set(allPosts.flatMap((post) => post.frontmatter.tags ?? [])),
  ];

  return tags.map((tag) => ({
    params: {
      tag,
    },
    props: {
      tags: tags.map((tag) => ({ label: tag, value: tag })),
      allPosts: allPosts.filter((post) => post.frontmatter.tags?.includes(tag)),
    },
  }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { tags, allPosts } = Astro.props;
---

<BaseLayout title={tag ?? "tag"}>
  <div class="flex gap-2 items-center">
    <p>Posts tagged with</p>
    <Combobox
      initialValue={tag ?? ""}
      options={tags}
      client:load
    />
  </div>
  <div class="h-6"></div>
  <ul
    role="list"
    class="not-prose space-y-10"
  >
    {
      // BUG: type Props does not work for Astro.props
      allPosts.map((post) => (
        <Card
          href={post.url ?? "/404"}
          title={post.frontmatter.title}
          body={post.frontmatter.description}
          src={post.frontmatter.image.url}
        />
      ))
    }
  </ul>
</BaseLayout>
